name: Build and deploy Arrangement-svc for review

on:
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build arrangement-svc
    uses: ./.github/workflows/build.yml
    with:
      ENVIRONMENT: development
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  debug:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: show needs output
        env: { CONTENT: "${{ toJson(needs) }}"}
        run: "echo $CONTENT"
#  deploy:
#    name: Deploy arrangement-svc
#    uses: ./.github/workflows/deploy.yml
#    needs: build
#    with:
#      ENVIRONMENT: development
#      IMAGE: ${{ needs.build.outputs.image }}
#      IMAGE_TAG: ${{ needs.build.outputs.image_tag }}
#      TERRAFORM_WORKSPACE: $GITHUB_HEAD_REF
#    secrets:
#      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#      AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
#      CONNECTIONSTRINGS__EVENTDB: ${{ secrets.CONNECTIONSTRINGS__EVENTDB }}
#      SENDGRID__APIKEY: ${{ secrets.SENDGRID__APIKEY }}

#name: Bekk-Deployment
#
#on:
#  push:
#    branches: [ terraform-managed ]
#  pull_request:
#    branches: [ terraform-managed ]
#    
#env:
#  AWS_REGION: "eu-central-1"
#  ECR_REPOSITORY: "bekk-arrangement-svc"
#  IMAGE_TAG: ${{ github.sha }}
#  
#jobs:
#  build:
#    name: build
#    runs-on: ubuntu-latest
#    environment: development
#    
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ${{ env.AWS_REGION }}
#
#      - name: Login to Amazon ECR
#        id: login-ecr
#        uses: aws-actions/amazon-ecr-login@v1
#
#      - name: Build, tag, and push image to Amazon ECR
#        id: build-image
#        env:
#          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#        run: |
#          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
#          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
#        
#      - name: Terraform Init
#        run: terraform -chdir=terraform init
#
##      - name: Terraform Format
##        run: terraform -chdir=terraform fmt -check
#        
#      - name: Terraform plan for debug
#        run: terraform -chdir=terraform plan -var-file=dev.tfvars
#        env:
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          TF_VAR_Sendgrid__Apikey: ${{ secrets.SENDGRID__APIKEY }}
#          TF_VAR_ConnectionStrings__EventDb: ${{ secrets.CONNECTIONSTRINGS__EVENTDB }}
#          TF_VAR_task_image_tag: $IMAGE_TAG
#
##      - name: Terraform Apply
##        run: terraform apply -auto-approve
##        env:
##          CONNECTIONSTRINGS__EVENTDB: ${{ secrets.CONNECTIONSTRINGS__EVENTDB }}
##          SENDGRID__APIKEY: ${{ secrets.SENDGRID__APIKEY }}
#  
#  
#  
#  
#  #  example_job:
#  #    name: Pass input and secrets to my-action
#  #    runs-on: ubuntu-latest
#  #    steps:
#  #      - uses: ./.github/workflows/my-action
#  #        with:
#  #          username: ${{ inputs.username }}
#  #          token: ${{ secrets.token }}
#  #      
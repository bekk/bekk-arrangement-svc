namespace ArrangementService.Participant

open ArrangementService.DomainModels
open ArrangementService.DateTime
open System

// ICS reference: https://tools.ietf.org/html/rfc5545
module CalendarInvite =
    let reminderObject =
        [ "BEGIN:VALARM"
          "TRIGGER:-PT15M"
          "ACTION:DISPLAY"
          "DESCRIPTION:Reminder"
          "END:VALARM" ] 
        |> String.concat "\n"

    let recurringObject =
        [ "RRULE:FREQ=WEEKLY"
          "RECURID:TEST" ] 
        |> String.concat "\n"

    let timezoneObject =
        ["BEGIN:VTIMEZONE"
         "TZID:Greenwich Standard Time"
         "BEGIN:STANDARD"
         "DTSTART:16010101T000000"
         "TZOFFSETFROM:+0000"
         "TZOFFSETTO:+0000"
         "END:STANDARD"
         "BEGIN:DAYLIGHT"
         "DTSTART:16010101T000000"
         "TZOFFSETFROM:+0000"
         "TZOFFSETTO:+0000"
         "END:DAYLIGHT"
         "END:VTIMEZONE" ]
        |> String.concat "\n" 

    let eventObject (event: Event) (participant: Participant) =
        let participantEmail = participant.Email.Unwrap
        [ "BEGIN:VEVENT"
          sprintf "ORGANIZER;CN=%s:mailto:%s" event.OrganizerEmail.Unwrap event.OrganizerEmail.Unwrap
          sprintf "ATTENDEE;CN=%s;RSVP=TRUE:mailto:%s" participantEmail participantEmail
          sprintf "DESCRIPTION;LANGUAGE=nb-NO:%s" "Beskrivelsen her" //event.Description.Unwrap
          sprintf "UID:%O" event.Id.Unwrap
          sprintf "SUMMARY;LANGUAGE=nb-NO:%s" "Oppsummeringen" //event.Title.Unwrap
          sprintf "DTSTART:%s" (toUtcString event.StartDate)
          sprintf "DTEND:%s" (toUtcString event.EndDate)
          sprintf "DTSTAMP:%s" (toUtcString (toCustomDateTime DateTime.UtcNow (TimeSpan())))
          sprintf "LOCATION;LANGUAGE=nb-NO:%s" event.Location.Unwrap
          "COMMENT:Heisann test test - - Ida"
          reminderObject
          // if recurring, insert recurringObject
          "END:VEVENT" ] 
        |> String.concat "\n" 
 
    let createCalendarAttachment (event: Event) (participant: Participant) =
        [ "BEGIN:VCALENDAR"
          "CALSCALE:GREGORIAN"
          "METHOD:REQUEST"
          "PRODID:-//Bekk//arrangement-svc//NO"
          "VERSION:2.0"
          timezoneObject
          eventObject event participant
          "END:VCALENDAR" ]
        |> String.concat "\n"

    let createMessage redirectUrl (event: Event) (participant: Participant) =
        [ "Hei! 游땏"
          sprintf "Du er n친 p친meldt %s." event.Title.Unwrap
          sprintf "Vi gleder oss til 친 se deg p친 %s den %s 游꿀"
              event.Location.Unwrap (toReadableString event.StartDate)
          "Siden det er begrenset med plasser, setter vi pris p친 om du melder deg av hvis du ikke lenger"
          "kan delta. Da blir det plass til andre p친 ventelisten 游땕"
          sprintf "Klikk her for 친 melde deg av: %s." redirectUrl
          "Bare sp칮r meg om det er noe du lurer p친."
          "Vi sees!"
          sprintf "Hilsen %s i Bekk" event.OrganizerEmail.Unwrap ]
        |> String.concat "\n"
